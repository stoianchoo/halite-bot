::halite.exe --replay-directory replays/ -vvv --width 32 --height 32 "node MyBot.js" "node MyBot.js"
::halite.exe --replay-directory replays/ -vvv -n 4 --width 64 --height 64 --no-compression "node MyBot.js" "node MyBot.js" "node MyBot.js" "node MyBot.js"
halite.exe --replay-directory replays/ -vvv --width 32 --height 32 --results-as-json "node MyBot.js" "node MyBot.js"

:: USAGE:

::    halite  [-v] ...  [-o <name strings>] ...  [-m <[basic | blur_tile |
::            fractal]>] [--from-snapshot <snapshot generated by visualizer>]
::            [-c <path to file>] [-i <path to directory>] [--turn-limit
::            <positive integer>] [-s <positive integer>] [--height <positive
::            integer>] [--width <positive integer>] [-n <positive integer>]
::            [--strict] [--results-as-json] [--no-compression]
::            [--print-constants] [--no-logs] [--no-replay] [--no-timeout]
::            [--] [--version] [-h] <path strings> ...


:: Where:

::    -v,  --verbosity  (accepted multiple times)
::      Increase the logging verbosity level.

::    -o <name strings>,  --override-names <name strings>  (accepted multiple
::       times)
::      Overrides player-sent names.

::    -m <[basic | blur_tile | fractal]>,  --map-type <[basic | blur_tile |
::       fractal]>
::      The map type.

::    --from-snapshot <snapshot generated by visualizer>
::      A snapshot of the game state.

::    -c <path to file>,  --constants-file <path to file>
::      JSON file containing runtime constants to use.

::    -i <path to directory>,  --replay-directory <path to directory>
::      The path to directory for replay output.

::    --turn-limit <positive integer>
::      The maximum number of turns to play.

::    -s <positive integer>,  --seed <positive integer>
::      The seed for the map generator.

::    --height <positive integer>
::      The height of the map.

::    --width <positive integer>
::      The width of the map.

::    -n <positive integer>,  --players <positive integer>
::      Create a map that will accommodate n players.

::    --strict
::      Enables strict error reporting mode.

::    --results-as-json
::      Prints game results as JSON at end.

::    --no-compression
::      Disables compression for output files. (They will just be plain JSON.)

::    --print-constants
::      Print out the default constants and exit.

::    --no-logs
::      Turns off writing error logs.

::    --no-replay
::      Turns off the replay generation.

::    --no-timeout
::      Causes game environment to ignore bot timeouts.

::    --,  --ignore_rest
::      Ignores the rest of the labeled arguments following this flag.

::    --version
::      Displays version information and exits.

::    -h,  --help
::      Displays usage information and exits.

::    <path strings>  (accepted multiple times)
::      (required)  Start commands for bots.


::    Halite Game Environment